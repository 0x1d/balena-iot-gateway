version: '2'
volumes:
    node-red-data:
    influxdb-data:
    zerotier-data:
    homeassistant-data:
services:
  #homeassistant:
  #  image: homeassistant/raspberrypi3-homeassistant:stable
  #  environment:
  #    - "TZ=Europe/Zurich"
  #  volumes:
  #    - homeassistant-data:/config
  #  ports:
  #    - 8123:8123
  #  restart: always
  #  network_mode: host
  #  privileged: true
  #  labels:
  #    io.balena.features.dbus: '1'
  #    io.balena.features.firmware: '1'
  #zerotier:
  #  build:
  #    context: zerotier
  #    args:
  #      ZEROTIER_VERSION: 1.4.0
  #  container_name: zerotier
  #  network_mode: host
  #  devices:
  #    - '/dev/net/tun:/dev/net/tun'
  #  cap_add:
  #    - NET_ADMIN
  #    - SYS_ADMIN
  #  volumes:
  #    - 'zerotier-data:/var/lib/zerotier-one'
  #  restart: unless-stopped
  influxdb:
    build: influxdb
    container_name: influxdb
    # privileged added so usb drive can be mounted.
    privileged: true
    volumes:
        # take care that the mount location '/mnt/influxdb' becomes overwritten
        # by the mount location specified in the influxdb Dockerfile.
        - 'influxdb-data:/mnt/influxdb'
    ports:
      # The API for InfluxDB is served on port 8086
      - '8082:8082'
      - '8086:8086'
      # UDP Port
      - '8089:8089'
    restart: always
  telegraf:
    # Full tag list: https://hub.docker.com/r/library/telegraf/tags/
    build : telegraf
    pid: 'host'
    network_mode: 'host'
    privileged: true
    labels:
      io.resin.features.balena-socket: '1'
    depends_on:
      - influxdb
    restart: always
    environment:
       - interval=60s
       - flush_interval=60s
  grafana:
    build: grafana
    ports:
       - '3000:3000'
    depends_on:
       - influxdb
    restart: always
  mqtt:
    image: panuwitp/mosquitto-arm
    ports:
      - '1883:1883'
  node-red:
    build: node-red
    volumes:
       - 'node-red-data:/data'
    ports:
       - '1880:1880'
    depends_on:
        - mqtt
    restart: always
  nginx:
    build : nginx
    depends_on:
      - grafana
      - node-red
    ports:
       - '80:80'
       - '443:443'
    restart: always
  # Screen WebKit
  #wpe:
  #  restart: always
  #  build: ./wpe
  #  privileged: true
  #  ports:
  #    - 8080:8080
  # Backlight Scheduler
  #scheduler:
  #  restart: always
  #  build: ./scheduler
  #  privileged: true
  #wifi-connect:
  #  build: ./wifi-connect
  #  restart: always
  #  network_mode: host
  #  privileged: true
  #  ports:
  #    - '9090:9090'
  #  labels:
  #    io.balena.features.dbus: '1'
  #    io.balena.features.firmware: '1'
#